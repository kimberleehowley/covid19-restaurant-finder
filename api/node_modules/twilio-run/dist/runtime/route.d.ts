import { Context, ServerlessFunctionSignature } from '@twilio-labs/serverless-runtime-types/types';
import { Request as ExpressRequest, RequestHandler as ExpressRequestHandler, Response as ExpressResponse } from 'express';
import { StartCliConfig } from '../config/start';
export declare function constructEvent<T extends {} = {}>(req: ExpressRequest): T;
export declare function constructContext<T extends {} = {}>({ url, env }: StartCliConfig, functionPath: string): Context<{
    ACCOUNT_SID?: string;
    AUTH_TOKEN?: string;
    DOMAIN_NAME: string;
    PATH: string;
    [key: string]: string | undefined | Function;
}>;
export declare function constructGlobalScope(config: StartCliConfig): void;
export declare function handleError(err: Error | string | object, req: ExpressRequest, res: ExpressResponse, functionFilePath?: string): void;
export declare function isTwiml(obj: object): boolean;
export declare function handleSuccess(responseObject: string | number | boolean | object | undefined, res: ExpressResponse): void;
export declare function functionToRoute(fn: ServerlessFunctionSignature, config: StartCliConfig, functionFilePath?: string): ExpressRequestHandler;
