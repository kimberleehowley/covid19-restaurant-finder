/** @module @twilio-labs/serverless-api */
/// <reference types="node" />
import got = require('got');
export declare type GotClient = typeof got;
export declare type EnvironmentVariables = {
    [key: string]: string | undefined;
};
export declare type FileInfo = {
    name: string;
    path: string;
};
/**
 * Necessary info to deploy a function
 */
export declare type ServerlessResourceConfig = {
    /**
     * Access for the function
     */
    access: AccessOptions;
    /**
     * Content of the uploaded function
     */
    content: string | Buffer;
    /**
     * Function name
     */
    name: string;
    /**
     * Path for the serverless resource
     * Functions: '/some-function'
     * Assets: '/some-assets.jpg'
     */
    path: string;
};
export declare type ServerlessResourceConfigWithFilePath = ServerlessResourceConfig & {
    /**
     * Path to the actual file on the file system.
     */
    filePath: string;
};
export declare type FunctionResource = ServerlessResourceConfig & {
    sid: string;
} & Partial<ServerlessResourceConfigWithFilePath>;
export declare type AssetResource = ServerlessResourceConfig & {
    sid: string;
} & Partial<ServerlessResourceConfigWithFilePath>;
export declare type Dependency = {
    name: string;
    version: string;
};
export declare type Variable = {
    key: string;
    value: string;
};
export declare type AccessOptions = 'private' | 'protected' | 'public';
export declare type ResourcePathAndAccess = {
    path: string;
    access: AccessOptions;
};
export declare type DirectoryContent = {
    assets: ServerlessResourceConfigWithFilePath[];
    functions: ServerlessResourceConfigWithFilePath[];
};
