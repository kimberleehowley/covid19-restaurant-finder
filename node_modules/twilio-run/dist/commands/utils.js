"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = require("path");
const util_1 = __importDefault(require("util"));
exports.deprecateProjectName = util_1.default.deprecate(() => { }, '--project-name is deprecated. Please use --service-name instead. If both have been passed --service-name will be preferred.');
function constructCommandName(fullCommand, action, args = []) {
    let baseCommand = '';
    if (fullCommand.includes(':')) {
        baseCommand = fullCommand.substr(0, fullCommand.indexOf(':') + 1);
    }
    else {
        baseCommand = fullCommand.split(' ')[0] + ' ';
    }
    return `${baseCommand}${action} ${args.join(' ')}`;
}
exports.constructCommandName = constructCommandName;
exports.deprecateFunctionsEnv = util_1.default.deprecate(() => { }, '--functions-env is deprecated. Please use --environnment instead. If both have been passed --environment will be preferred.');
function getFullCommand(flags) {
    let baseCommand = flags.$0;
    baseCommand = path_1.basename(baseCommand);
    if (flags._.length > 0) {
        baseCommand = `${baseCommand} ${flags._[0]}`;
    }
    return baseCommand;
}
exports.getFullCommand = getFullCommand;
