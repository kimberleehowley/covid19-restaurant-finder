"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const debug_1 = __importDefault(require("debug"));
const log = debug_1.default('twilio-serverless-api:utils:pagination');
function getPaginatedResource(client, url, opts = { json: true }) {
    return __awaiter(this, void 0, void 0, function* () {
        let result = [];
        opts = Object.assign({}, opts);
        let nextPageUrl = url;
        do {
            try {
                const resp = yield client.get(nextPageUrl, opts);
                const body = resp.body;
                nextPageUrl = body.meta.next_page_url;
                const entries = body[body.meta.key];
                result = [...result, ...entries];
            }
            catch (err) {
                log('%O', err);
                // if the first request failed, throw error
                if (nextPageUrl === url) {
                    throw err;
                }
                else {
                    break;
                }
            }
        } while (nextPageUrl !== null);
        return result;
    });
}
exports.getPaginatedResource = getPaginatedResource;
